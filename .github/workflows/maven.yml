name: CI

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: mvn clean verify -DskipTests=true --show-version
  test-with-server:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mattermost-version: [5.14.2]
    services:
      inbucket:
        image: jhillyerd/inbucket:release-2.0.0
        ports:
          - 2500/tcp
      postgres:
        image: postgres:9.4-alpine
        ports:
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: mmuser
          POSTGRES_PASSWORD: mostest
          POSTGRES_DB: mattermost_test
      mattermost:
        image: mattermost/mattermost-enterprise-edition:${{ matrix.mattermost-version }}
        ports:
          - 8065/tcp
        env:
          MM_SERVICESETTINGS_LISTENADDRESS: ":8065"
          MM_SQLSETTINGS_DRIVERNAME: postgres
          MM_SQLSETTINGS_DATASOURCE: "postgres://mmuser:mostest@postgres:5432/mattermost_test?sslmode=disable&connect_timeout=10"
          MM_EMAILSETTINGS_SMTPSERVER: inbucket
          MM_EMAILSETTINGS_SMTPPORT: 2500
        volumes:
          /mattermost/data: $HOME/mm-data
          /mattermost/logs: $HOME/mm-logs
          /mattermost/config: $HOME/mm-config
          /mattermost/plugins: $HOME/mm-plugins
          /mattermost/client/plugins: $HOME/mm-client-plugins
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: mvn clean verify --show-version
        env:
          MATTERMOST_URL: http://localhost:${{ job.services.mattermost.ports['8065'] }}
          INBUCKET_HOST: inbucket
          INBUCKET_PORT: 2500
          USE_LOCAL_DUMMY_SERVER: false
          DUMMY_HTTP_SERVER_HOST: static.bis5.net
          DUMMY_HTTP_SERVER_PORT: 0
  sonarqube:
    needs: [test-with-server]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mattermost-version: [5.14.0]
    services:
      inbucket:
        image: jhillyerd/inbucket:release-2.0.0
        ports:
          - 2500/tcp
      postgres:
        image: postgres:9.4-alpine
        ports:
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_USER: mmuser
          POSTGRES_PASSWORD: mostest
          POSTGRES_DB: mattermost_test
      mattermost:
        image: mattermost/mattermost-enterprise-edition:${{ matrix.mattermost-version }}
        ports:
          - 8065/tcp
        env:
          MM_SERVICESETTINGS_LISTENADDRESS: ":8065"
          MM_SQLSETTINGS_DRIVERNAME: postgres
          MM_SQLSETTINGS_DATASOURCE: "postgres://mmuser:mostest@postgres:5432/mattermost_test?sslmode=disable&connect_timeout=10"
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - run: mvn clean verify sonar:sonar --show-version -s .circleci/settings-sonar.xml
        env:
          MATTERMOST_URL: http://localhost:${{ job.services.mattermost.ports['8065'] }}
          INBUCKET_HOST: inbuclet
          INBUCKET_PORT: 2500
          USE_LOCAL_DUMMY_SERVER: false
          DUMMY_HTTP_SERVER_HOST: static.bis5.net
          DUMMY_HTTP_SERVER_PORT: 0
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
